[{"name":"app.R","content":"library(shiny)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(jsonlite)\n\n# parse glittr api at startup\nparsed <- fromJSON(\"https://glittr.org/api/tags\",\n                   simplifyDataFrame = FALSE)\n\n# create the dataframe with tags and categories\ntag_dfs <- list()\nfor(i in seq_along(parsed)) {\n  category <- parsed[[i]]$category\n  name <- sapply(parsed[[i]]$tags, function(x) x$name)\n  repositories <- sapply(parsed[[i]]$tags, function(x) x$repositories)\n  tag_dfs[[category]] <- data.frame(name, category, repositories)\n}\n\ntag_df <- do.call(rbind, tag_dfs) |> arrange(repositories)\n\ncategories <- unique(tag_df$category)\n\n# set the colors\nglittr_cols <- c(\n  \"Scripting and languages\" =             \"#3a86ff\",\n  \"Computational methods and pipelines\" = \"#fb5607\",\n  \"Omics analysis\" =                      \"#ff006e\",\n  \"Reproducibility and data management\" = \"#ffbe0b\",\n  \"Statistics and machine learning\" =     \"#8338ec\",\n  \"Others\" =                              \"#000000\")\n\n\n\n\n# UI ----\nui <- fluidPage(\n  \n  # App title ----\n  titlePanel(\"Repos tagged per category at Glittr.org\"),\n  sidebarLayout(\n    \n    sidebarPanel(width = 4,\n                 checkboxGroupInput(inputId = \"categories\",\n                                    label = \"Select category\",\n                                    choices = categories,\n                                    selected = categories),\n                 \n                 sliderInput(inputId = \"min_repos\",\n                             label = \"Minimum number of repos to show per tag\",\n                             min = 0,\n                             max = 50,\n                             value = 10),\n    ),\n    \n    # Main panel for displaying outputs ----\n    mainPanel(width = 9,\n              plotOutput(outputId = \"barplot\",\n                         height = \"400px\")\n              \n    )\n  )\n)\n\n# Define server logic required to draw a histogram ----\nserver <- function(input, output) {\n  \n  \n  \n  output$barplot <- renderPlot({\n    \n    tag_df_filt <- tag_df |>\n      filter(repositories > input$min_repos & category %in% input$categories)\n    \n    tag_freq_plot <- tag_df_filt |>\n      ggplot(aes(x = reorder(name, repositories),\n                 y = repositories, fill = category)) +\n      geom_bar(stat = \"identity\") +\n      coord_flip() +\n      scale_fill_manual(values = glittr_cols) +\n      ggtitle(paste0(\"Tags with >\", input$min_repos, \" repositories\")) +\n      ylab(\"Number of repositories\") +\n      annotate(geom = \"text\", x = 2, y = 150,\n               label = paste(\"Total number of tags: \",\n                             nrow(tag_df_filt)),\n               color=\"black\") +\n      theme_classic() +\n      theme(legend.position = \"none\",\n            axis.title.y = element_blank())\n    \n    print(tag_freq_plot)\n  })\n}\n\n# Create Shiny app ----\nshinyApp(ui = ui, server = server)\n","type":"text"}]
